--  Generate SQL 
--  Version:                   	V5R2M0 020719 
--  Generated on:              	09/30/13 12:18:48 
--  Relational Database:       	S1022760 
--  Standards Option:          	DB2 UDB AS/400 
DROP VIEW BIMSALIAS.A_POSITION_BUDGET_MASTER;


CREATE VIEW BIMSALIAS.A_POSITION_BUDGET_MASTER ( 
	POSITION_TABLE FOR COLUMN POSTABLE   , 
	POSITION_NUMBER FOR COLUMN POSNUMBER  , 
	POSITION_SEQUENCE FOR COLUMN POSSEQNUM  , 
	BENEFIT_GROUP FOR COLUMN BENGRP     , 
	GRADE_CODE FOR COLUMN GRADECODE  , 
	JOB_CLASS_CODE FOR COLUMN JOBCLASS   , 
	DIVISION_CODE FOR COLUMN DIVSCODE   , 
	DEPARTMENT_CODE FOR COLUMN DEPTCODE   , 
	PAY_GROUP , 
	CALC_FICA , 
	CALC_MEDICARE FOR COLUMN CALC_MED   , 
	FICA_MEDICARE_RATE FOR COLUMN FICAMED    , 
	STATUS , 
	BUDGETED_POSITION FOR COLUMN BUDPOS     , 
	FROZEN_STATUS FOR COLUMN FROZSTATUS , 
	FULL_TIME_EQUIVALENCY FOR COLUMN FTE        , 
	DATE_ESTABLISHED FOR COLUMN DATEESTB   , 
	DATE_ABOLISHED FOR COLUMN DATEABLB   , 
	LIMITED_TERM_DATE FOR COLUMN LIMITDATE  , 
	APPOINTMENT_STATUS FOR COLUMN APPTSTATUS , 
	JURSDICTION_CLASS FOR COLUMN JURSCLASS  , 
	FUND_NUMBER FOR COLUMN FUNDNUM    , 
	PROGRAM_NUMBER FOR COLUMN PROGNUM    , 
	COST_CENTER FOR COLUMN COSTCENTER , 
	SALARY_ACCOUNT FOR COLUMN SALACCT    , 
	OVERTIME_ACCOUNT FOR COLUMN OTACCT     , 
	STANDARD_HOURS FOR COLUMN STNDHOURS  , 
	PAY_PERIODS FOR COLUMN PAY_PERIOD , 
	ANNUAL_HOURS FOR COLUMN ANNUALHRS  , 
	BASE_SALARY FOR COLUMN BASESAL    , 
	BASE_HOURLY_RATE FOR COLUMN BASEHRLY   , 
	PERCENT_INCREASE FOR COLUMN PERCENTINC , 
	BUDGET_SALARY FOR COLUMN BUDGETSAL  , 
	BUDGET_HOURLY_RATE FOR COLUMN BUDGETHOUR , 
	ADOPTED_HOURLY_RATE FOR COLUMN ADPTHRYRTE , 
	PC_JOB_CODE FOR COLUMN PCJOBCODE  , 
	PC_HEALTH_CODE FOR COLUMN PCU_HEALTH , 
	HEALTH_CODE FOR COLUMN HEALTHCOD  , 
	PC_PENSION_CODE FOR COLUMN PCU_PENSIO , 
	PENSION_CODE FOR COLUMN PENCODE    , 
	LIFE_CODE , 
	LTD_CODE , 
	ADD_CODE , 
	PC_DATE_RAISE FOR COLUMN PCU_DTERAS , 
	PC_DATE_PENSION FOR COLUMN PCU_DTEPEN , 
	PC_HOURS_OT FOR COLUMN PCU_HRSOT  , 
	PC_HOURS_OTFLSA FOR COLUMN PCU_HRSOTF , 
	PC_OTHER_PAY FOR COLUMN PCU_OTHPAY , 
	PC_HOLIDAY_HOURS FOR COLUMN PCU_HOLPAY , 
	PC_SPLIT_POSITION FOR COLUMN PC_SPLIT   , 
	PC_EXEMPT_POSITION FOR COLUMN PC_EXPOS   , 
	PC_SPLIT_CODE FOR COLUMN PCUSPLIT   , 
	PCM_LCD , 
	PCM_LCT , 
	PCM_LCU , 
	PCU_LCT , 
	PCU_LCD , 
	PCU_LCU ) 
	AS 
	( 
			SELECT PCM.POSITION_TABLE, 
				PCM.POSITION_NUMBER, 
				PCM.POSITION_SEQUENCE, 
				PCM.BENEFIT_GROUP, 
				PCM.GRADE_CODE, 
				PCM.JOB_CLASS_CODE, 
				PCM.DIVISION_CODE, 
				PCM.DEPARTMENT_CODE, 
				PCM.PAY_GROUP, 
				PCM.CALC_FICA, 
				PCM.CALC_MEDICARE, 
				CAST(( 
						CASE  
							WHEN PCM.CALC_FICA = 'Y' 
								THEN 0.0620 
							ELSE 0.0000 
							END 
						) + ( 
						CASE  
							WHEN PCM.CALC_MEDICARE = 'Y' 
								THEN 0.0145 
							ELSE 0.0000 
							END 
						) AS DECIMAL(9, 4)) AS FICA_MEDICARE_RATE, 
				PCM.STATUS, 
				PCM.BUDGETED_POSITION, 
				CAST(CASE  
						WHEN PCM.STATUS = 'F' 
							AND PCM.JURSDICTION_CLASS = 'HELD' 
							THEN 'H' 
						WHEN PCM.STATUS = 'F' 
							AND PCM.JURSDICTION_CLASS = 'FRZN' 
							THEN 'F' 
						ELSE PCM.STATUS 
						END AS CHAR(1)) AS FROZEN_STATUS, 
				PCM.FULL_TIME_EQUIVALENCY, 
				PCM.DATE_ESTABLISHED, 
				PCM.DATE_ABOLISHED, 
				PCM.LIMITED_TERM_DATE, 
				PCM.APPOINTMENT_STATUS, 
				PCM.JURSDICTION_CLASS, 
				PCM.FUND_NUMBER, 
				PCM.PROGRAM_NUMBER, 
				CAST(PCM.FUND_NUMBER CONCAT '.' CONCAT PCM.PROGRAM_NUMBER AS CHAR(9)) AS COST_CENTER, 
				PCM.SALARY_ACCOUNT, 
				PCM.OVERTIME_ACCOUNT, 
				PCM.STANDARD_HOURS, 
				CASE  
					WHEN TRIM(PCM.PAY_GROUP) = 'B' 
						THEN 26 
					ELSE 12 
					END AS PAY_PERIODS, 
				CAST(PCM.STANDARD_HOURS * ( 
						CASE  
							WHEN TRIM(PCM.PAY_GROUP) = 'B' 
								THEN 26 
							ELSE 12 
							END 
						) AS DECIMAL(11, 2)) AS ANNUAL_HOURS, 
				PCM.BASE_SALARY, 
				PCM.BASE_HOURLY_RATE, 
				PCM.PERCENT_INCREASE, 
				PCM.BUDGET_SALARY, 
				PCM.BUDGET_HOURLY_RATE, 
				PCM.ADOPTED_HOURLY_RATE, 
				PCM.PC_JOB_CODE, 
				PCM.PC_HEALTH_CODE, 
				CAST(CASE  
						WHEN TRIM(PCM.PC_HEALTH_CODE) IN ( 
								'NE', 
								'NQ' 
								) 
							THEN 'XXXX' 
						WHEN SUBSTRING(PCM.PC_HEALTH_CODE, 1, 1) = 'P' 
							THEN 'N' CONCAT SUBSTRING(PCM.PC_HEALTH_CODE, 2, 3) 
						ELSE PCM.PC_HEALTH_CODE 
						END AS CHAR(4)) AS HEALTH_CODE, 
				PCM.PC_PENSION_CODE, 
				CAST(CASE  
						WHEN STRIP(PCM.PC_PENSION_CODE) IN ( 
								'NE', 
								'NQ' 
								) 
							THEN 'XXXX' 
						ELSE ' ' CONCAT SUBSTRING(PCM.PC_PENSION_CODE, 2, 3) 
						END AS CHAR(4)) AS PENSION_CODE, 
				CAST(CASE  
						WHEN PCM.BENEFIT_CODE = 'Y' 
							THEN ' 900' 
						ELSE 'XXXX' 
						END AS CHAR(4)) AS LIFE_CODE, 
				CAST(CASE  
						WHEN PCM.BENEFIT_CODE = 'Y' 
							THEN ' 920' 
						ELSE 'XXXX' 
						END AS CHAR(4)) AS LTD_CODE, 
				CAST(CASE  
						WHEN PCM.BENEFIT_CODE = 'Y' 
							THEN ' 680' 
						ELSE 'XXXX' 
						END AS CHAR(4)) AS ADD_CODE, 
				PCM.PC_DATE_RAISE, 
				PCM.PC_DATE_PENSION, 
				PCM.PC_HOURS_OT, 
				PCM.PC_HOURS_OTFLSA, 
				PCM.PC_OTHER_PAY, 
				PCM.PC_HOLIDAY_HOURS, 
				PCM.PC_SPLIT_POSITION, 
				PCM.PC_EXEMPT_POSITION, 
				CAST(CASE  
						WHEN STRIP(PCM.PC_SPLIT_CODE) = '    ' 
							THEN 'NULL' 
						ELSE PCM.PC_SPLIT_CODE 
						END AS CHAR(4)) AS PC_SPLIT_CODE, 
				PCM.PCM_LCD, 
				PCM.PCM_LCT, 
				PCM.PCM_LCU, 
				PCM.PCU_LCT, 
				PCM.PCU_LCD, 
				PCM.PCU_LCU 
			FROM ( 
				SELECT CAST('PCM' AS CHAR(3)) AS POSITION_TABLE, 
					P.PMPOS# AS POSITION_NUMBER, 
					P.PMSEQ# AS SEQUENCE_NUMBER, 
					CAST(P.PMPOS# CONCAT '.' CONCAT DIGITS(P.PMSEQ#) AS CHAR(11)) AS POSITION_SEQUENCE, 
					P.PMBGRP AS BENEFIT_GROUP, 
					P.PMGRAD AS GRADE_CODE, 
					P.PMCLAS AS JOB_CLASS_CODE, 
					P.PMDEPT AS DIVISION_CODE, 
					P.PMSDPT AS DEPARTMENT_CODE, 
					P.PMPGRP AS PAY_GROUP, 
					P.PMFICA AS CALC_FICA, 
					P.PMMEDI AS CALC_MEDICARE, 
					P.PMBDPS AS BUDGETED_POSITION, 
					P.PMSTAT AS STATUS, 
					P.PMPFTE AS FULL_TIME_EQUIVALENCY, 
					P.PMESTD AS DATE_ESTABLISHED, 
					P.PMABLD AS DATE_ABOLISHED, 
					P.PMLTRM AS LIMITED_TERM_DATE, 
					P.PMASTS AS APPOINTMENT_STATUS, 
					P.PMPTYP AS JURSDICTION_CLASS, 
					CAST(TRIM(P.PMORG1) AS CHAR(4)) AS FUND_NUMBER, 
					CAST(TRIM(P.PMORG2) AS CHAR(4)) AS PROGRAM_NUMBER, 
					CAST(TRIM(P.PMSAT1) CONCAT '.' CONCAT TRIM(P.PMSAT2) AS CHAR(7)) AS SALARY_ACCOUNT, 
					CAST(TRIM(P.PMCAT1) CONCAT '.' CONCAT TRIM(P.PMCAT2) AS CHAR(7)) AS OVERTIME_ACCOUNT, 
					P.PMSHRS AS STANDARD_HOURS, 
					P.PMSALR AS BASE_SALARY, 
					P.PMRATE AS BASE_HOURLY_RATE, 
					P.PMPINC AS PERCENT_INCREASE, 
					P.PMBSAL AS BUDGET_SALARY, 
					P.PMBRAT AS BUDGET_HOURLY_RATE, 
					P.PMSHFT AS ADOPTED_HOURLY_RATE, 
					PCU.PMTAB1 AS PC_JOB_CODE, 
					PCU.PMTAB5 AS PC_HEALTH_CODE, 
					PCU.PMTAB6 AS PC_PENSION_CODE, 
					CAST(CASE  
							WHEN TRIM(P.PMBGRP) NOT IN ( 
									'1000', 
									'9000', 
									'9999', 
									'200', 
									'300', 
									'350', 
									'400', 
									'450', 
									'900', 
									'905' 
									) 
								THEN 'Y' 
							ELSE 'N' 
							END AS CHAR(1)) AS BENEFIT_CODE, 
					PCU.PMDAT1 AS PC_DATE_RAISE, 
					PCU.PMDAT2 AS PC_DATE_PENSION, 
					PCU.PMAMT1 AS PC_HOURS_OT, 
					PCU.PMAMT2 AS PC_HOURS_OTFLSA, 
					PCU.PMADA1 AS PC_OTHER_PAY, 
					PCU.PMADA2 AS PC_HOLIDAY_HOURS, 
					PCU.PMFLG1 AS PC_SPLIT_POSITION, 
					PCU.PMFLG2 AS PC_EXEMPT_POSITION, 
					PCU.PMTAB2 AS PC_SPLIT_CODE, 
					P.PMLCD AS PCM_LCD, 
					P.PMLCT AS PCM_LCT, 
					P.PMLCU AS PCM_LCU, 
					PCU.PMLCT AS PCU_LCT, 
					PCU.PMLCD AS PCU_LCD, 
					PCU.PMLCU AS PCU_LCU 
				FROM NWSHRFLS.PCPMST P, 
					NWSHRFLS.PCPUSR AS PCU 
				WHERE ( 
						P.PMPOS# = PCU.PMPOS# 
						AND P.PMSEQ# = PCU.PMSEQ# 
						) 
				 
				UNION ALL 
				 
				SELECT CAST('PCB' AS CHAR(3)) AS POSITION_TABLE, 
					P.PBPOS# AS POSITION_NUMBER, 
					P.PBSEQ# AS SEQUENCE_NUMBER, 
					CAST(P.PBPOS# CONCAT '.' CONCAT DIGITS(P.PBSEQ#) AS CHAR(11)) AS POSITION_SEQUENCE, 
					P.PBBGRP AS BENEFIT_GROUP, 
					P.PBGRAD AS GRADE_CODE, 
					P.PBCLAS AS JOB_CLASS_CODE, 
					P.PBDEPT AS DIVISION_CODE, 
					P.PBSDPT AS DEPARTMENT_CODE, 
					P.PBPGRP AS PAY_GROUP, 
					P.PBFICA AS CALC_FICA, 
					P.PBMEDI AS CALC_MEDICARE, 
					P.PBBDPS AS BUDGETED_POSITION, 
					P.PBSTAT AS STATUS, 
					P.PBPFTE AS FULL_TIME_EQUIVALENCY, 
					P.PBESTD AS DATE_ESTABLISHED, 
					P.PBABLD AS DATE_ABOLISHED, 
					P.PBLTRM AS LIMITED_TERM_DATE, 
					P.PBASTS AS APPOINTMENT_STATUS, 
					P.PBPTYP AS JURSDICTION_CLASS, 
					CAST(TRIM(P.PBORG1) AS CHAR(4)) AS FUND_NUMBER, 
					CAST(TRIM(P.PBORG2) AS CHAR(4)) AS PROGRAM_NUMBER, 
					CAST(TRIM(P.PBSAT1) CONCAT '.' CONCAT TRIM(P.PBSAT2) AS CHAR(7)) AS SALARY_ACCOUNT, 
					CAST(TRIM(P.PBCAT1) CONCAT '.' CONCAT TRIM(P.PBCAT2) AS CHAR(7)) AS OVERTIME_ACCOUNT, 
					P.PBSHRS AS STANDARD_HOURS, 
					P.PBSALR AS BASE_SALARY, 
					P.PBRATE AS BASE_HOURLY_RATE, 
					P.PBPINC AS PERCENT_INCREASE, 
					P.PBBSAL AS BUDGET_SALARY, 
					P.PBBRAT AS BUDGET_HOURLY_RATE, 
					P.PBSHFT AS ADOPTED_HOURLY_RATE, 
					PCU.PBTAB1 AS PC_JOB_CODE, 
					PCU.PBTAB5 AS PC_HEALTH_CODE, 
					PCU.PBTAB6 AS PC_PENSION_CODE, 
					CAST(CASE  
							WHEN TRIM(P.PBBGRP) NOT IN ( 
									'1000', 
									'9000', 
									'9999', 
									'200', 
									'300', 
									'350', 
									'400', 
									'450', 
									'900', 
									'905' 
									) 
								THEN 'Y' 
							ELSE 'N' 
							END AS CHAR(1)) AS BENEFIT_CODE, 
					PCU.PBDAT1 AS PC_DATE_RAISE, 
					PCU.PBDAT2 AS PC_DATE_PENSION, 
					PCU.PBAMT1 AS PC_HOURS_OT, 
					PCU.PBAMT2 AS PC_HOURS_OTFLSA, 
					PCU.PBADA1 AS PC_OTHER_PAY, 
					PCU.PBADA2 AS PC_HOLIDAY_HOURS, 
					PCU.PBFLG1 AS PC_SPLIT_POSITION, 
					PCU.PBFLG2 AS PC_EXEMPT_POSITION, 
					PCU.PBTAB2 AS PC_SPLIT_CODE, 
					P.PBLCD AS PCM_LCD, 
					P.PBLCT AS PCM_LCT, 
					P.PBLCU AS PCM_LCU, 
					PCU.PBLCT AS PCU_LCT, 
					PCU.PBLCD AS PCU_LCD, 
					PCU.PBLCU AS PCU_LCU 
				FROM NWSHRFLS.PCBPST P, 
					NWSHRFLS.PCBUSR AS PCU 
				WHERE ( 
						P.PBPOS# = PCU.PBPOS# 
						AND P.PBSEQ# = PCU.PBSEQ# 
						) 
				) AS PCM 
			WHERE PCM.STATUS NOT IN ('Z') 
			) ; 
  
LABEL ON TABLE BIMSALIAS.A_POSITION_BUDGET_MASTER 
	IS '- POSITION BUDGET MASTER' ; 
  
/*--------------------------------------------------------------*/
RENAME TABLE BIMSALIAS.A_POSITION_BUDGET_MASTER TO SYSTEM NAME PC_PCBMST;

/*--------------------------------------------------------------*/
GRANT ALL PRIVILEGES
	ON BIMSALIAS.A_POSITION_BUDGET_MASTER
	TO PUBLIC;  
  
LABEL ON COLUMN BIMSALIAS.A_POSITION_BUDGET_MASTER 
( POSITION_NUMBER TEXT IS 'POSITION NUMBER' , 
	BENEFIT_GROUP TEXT IS 'BENEFIT GROUP' , 
	GRADE_CODE TEXT IS 'GRADE' , 
	JOB_CLASS_CODE TEXT IS 'CLASS' , 
	DIVISION_CODE TEXT IS 'DEPARTMENT' , 
	DEPARTMENT_CODE TEXT IS 'SUB-DEPARTMENT' , 
	PAY_GROUP TEXT IS 'PAY GROUP' , 
	CALC_FICA TEXT IS 'CALC. FICA Y/N/' , 
	CALC_MEDICARE TEXT IS 'CALC. MEDICARE Y/N' , 
	STATUS TEXT IS 'STATUS' , 
	BUDGETED_POSITION TEXT IS 'BUDGETED POSITION' , 
	FULL_TIME_EQUIVALENCY TEXT IS 'FULL TIME EQUIV.' , 
	DATE_ESTABLISHED TEXT IS 'ESTABLISH DATE' , 
	DATE_ABOLISHED TEXT IS 'ABOLISH DATE' , 
	LIMITED_TERM_DATE TEXT IS 'LIMIT TERM DATE' , 
	APPOINTMENT_STATUS TEXT IS 'APPOINTMENT STS  #' , 
	JURSDICTION_CLASS TEXT IS 'JURISDICTION CLASS' , 
	STANDARD_HOURS TEXT IS 'STANDARD HOURS' , 
	BASE_SALARY TEXT IS 'BASE SALARY' , 
	BASE_HOURLY_RATE TEXT IS 'BASE RATE' , 
	PERCENT_INCREASE TEXT IS 'PERCENT INCREASE' , 
	BUDGET_SALARY TEXT IS 'BUDGET SALARY' , 
	BUDGET_HOURLY_RATE TEXT IS 'BUDGET HOURLY RATE' , 
	ADOPTED_HOURLY_RATE TEXT IS 'SHIFT AMOUNT' , 
	PC_JOB_CODE TEXT IS 'USER DEFINED TABLE 1' , 
	PC_HEALTH_CODE TEXT IS 'USER DEFINED TABLE 5' , 
	PC_PENSION_CODE TEXT IS 'USER DEFINED TABLE 6' , 
	PC_DATE_RAISE TEXT IS 'USER DEFINED DATE 1' , 
	PC_DATE_PENSION TEXT IS 'USER DEFINED DATE 2' , 
	PC_HOURS_OT TEXT IS 'USER DEFINED AMT 1' , 
	PC_HOURS_OTFLSA TEXT IS 'USER DEFINED AMT 2' , 
	PC_OTHER_PAY TEXT IS 'USER DEFINED ADDAMT1' , 
	PC_HOLIDAY_HOURS TEXT IS 'USER DEFINED ADDAMT2' , 
	PC_SPLIT_POSITION TEXT IS 'USER DEFINED FLAG 1' , 
	PC_EXEMPT_POSITION TEXT IS 'USER DEFINED FLAG 2' , 
	PCM_LCD TEXT IS 'LAST CHANGE DATE' , 
	PCM_LCT TEXT IS 'LAST CHANGE TIME' , 
	PCM_LCU TEXT IS 'LAST CHANGE USER' , 
	PCU_LCT TEXT IS 'LAST CHANGE TIME' , 
	PCU_LCD TEXT IS 'LAST CHANGE DATE' , 
	PCU_LCU TEXT IS 'LAST CHANGE USER' ) ;
